#!/bin/bash

# custom commands for docker compose
handle-global-help() {
    # make it stop after printing help
    STOP=1
    docker-compose help
    echo
    echo "Custom Commands:"
    echo -e "$1"
}

handle-command-help() {
    local print_help=0;

    [ "$1" = "help" ] && [ "$2" = "ports" ] && print_help=1;
    [ "$1" = "ports" ] && [ "$2" = "--help" ] && print_help=1;

    if [ $print_help -eq 1 ]; then
        # remove the first empty line
        echo "$3" | tail -n +2;

        exit 0;
    fi;

    return 0;
}

handle-custom-commands () {
    local custom_commands;

    custom_commands="$custom_commands  ports              Show open ports for each service\n";

    handle-command-help $1 $2 "
Validate and view the Compose file.

Usage: ports
";

    if [ "$1" = "ports" ]; then
        $0 config ${@:2}| $SCRIPTS/bin/yq r --printMode pv - '**.ports.**' | grep -i published | tr . ' '  | awk '{print $2 ": " $6}';
        exit 0;
    fi;

    # undocumented shortcuts :-)

    if [ "$1" = "b" ]; then
        $0 build "${@:2}"
        exit 0;
    fi;

    if [ "$1" = "d" ]; then
        $0 down "${@:2}"
        exit 0;
    fi;

    if [ "$1" = "x" ]; then
        $0 exec "${@:2}"
        exit 0;
    fi;

    if [ "$1" = "l" ]; then
        $0 logs "${@:2}"
        exit 0;
    fi;

    if [ "$1" = "r" ]; then
        $0 run "${@:2}"
        exit 0;
    fi;

    if [ "$1" = "s" ]; then
        $0 stop "${@:2}"
        exit 0;
    fi;

    if [ "$1" = "u" ]; then
        $0 up "${@:2}"
        exit 0;
    fi;

    if [ "$1" = "ub" ]; then
        $0 up --build "${@:2}"
        exit 0;
    fi;

    if [ "$1" = "v" ]; then
        $0 version "${@:2}"
        exit 0;
    fi;

    [ -z "$1" ] || [ "$1" = "help" ] && [ -z "$2" ] && handle-global-help "$custom_commands"
}