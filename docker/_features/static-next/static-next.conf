server {
    listen       80;
    server_name  localhost;
    server_tokens off;

    # TODO: use 301
    # TODO: use ENV var for port
    return 302 https://$host:7443$request_uri;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}

 # HTTPS server

server {
    listen       443 ssl http2;
    server_name  localhost;
    server_tokens off;

    ssl_certificate      /etc/ssl/certs/default.crt;
    ssl_certificate_key  /etc/ssl/private/default.key;

    ssl_session_cache    shared:SSL:1m;
    ssl_session_timeout  5m;

    ssl_ciphers  HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;

    # NextJS in server mode: all these files have names
    # with cache-burning tag, so we set them to never expire.
    location / {
        root   /static/current;

        # no trailing slash
        if ($request_uri ~ (.+)/$) {
            return 301 $scheme://$http_host$1;
        }
        # pretty urls handling
        if ($request_uri ~ (.*)\.html$) {
            return 301 $scheme://$http_host$1;
        }
        try_files $uri $uri.html $uri/ =404;

        # this one is extreme, likely not needed, feel free to remove it
        if ($request_uri ~ "(^|-|[./])[a-f0-9]{20,40}($|-|[./])" ) {
            # allow remote proxies to cache timestamped files
            expires max;
        }

        # so that we show NextJS error page
        error_page  404 /404.html;

        sendfile           on;
        sendfile_max_chunk 1m;
    }

}
